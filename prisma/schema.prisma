// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id         String    @id @default(uuid())
  name       String
  profile_id String
  number     String    @unique
  image      String
  role       AdminRole @default(EDITOR)
  email      String    @unique
  password   String
  status     Status    @default(ACTIVE)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  @@map("admins")
}

model Client {
  id                String     @id @default(uuid())
  name              String
  organization_name String
  profile_id        String
  birthday          String
  gender            String
  number            String     @unique
  image             String
  category          String
  subcategory       String
  division          String
  district          String
  thana             String
  ward              String?
  area              String?
  road              String?
  data              String[]
  interest          String[]
  connect           String[]
  role              ClientRole @default(NORMAL)
  email             String?    @unique
  password          String
  status            Status     @default(ACTIVE)
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt

  @@map("cliants")
}

enum ClientRole {
  NORMAL
  BASIC
  STANDARD
  ADVANCED
  PLUS
  PRO
}

model Employee {
  id         String   @id @default(uuid())
  name       String
  profile_id String
  birthday   String
  gender     String
  number     String   @unique
  image      String
  division   String
  district   String
  thana      String
  ward       String?
  area       String?
  road       String?
  data       String[]
  interest   String[]
  connect    String[]
  role       String   @default("Seles and Merketing")
  email      String?  @unique
  password   String
  status     Status   @default(ACTIVE)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("employees")
}

model User {
  id         String   @id @default(uuid())
  name       String
  profile_id String
  number     String   @unique
  image      String
  email      String?  @unique
  password   String
  status     Status   @default(ACTIVE)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("users")
}

model Question_List {
  id        String   @id @default(uuid())
  name      String
  company   String?
  number    String?
  message   String
  client_id String
  email     String?
  status    Status   @default(ACTIVE)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("question_lists")
}

model Message_List {
  id              String   @id @default(uuid())
  subject         String?
  message         String?
  image           String?
  message_show    String?
  message_show_id String?
  status          Status   @default(ACTIVE)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("message_lists")
}

model Hall_Room_Post {
  id          String   @id @default(uuid())
  title       String?
  post        String?
  image       String?
  category    String
  subcategory String
  division    String
  district    String
  thana       String
  ward        String?
  area        String?
  road        String?
  client_id   String?
  like        String[]
  view        String[]
  status      Status   @default(ACTIVE)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("hall_room_posts")
}

model Paid_Image {
  id          String   @id @default(uuid())
  title       String?
  post        String?
  image       String?
  category    String
  subcategory String
  division    String
  district    String
  thana       String
  ward        String?
  area        String?
  road        String?
  client_id   String?
  client_role String?
  like        String[]
  view        String[]
  status      Status   @default(ACTIVE)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("paid_image")
}

model Paid_Video {
  id          String   @id @default(uuid())
  title       String?
  post        String?
  video       String?
  category    String
  subcategory String
  division    String
  district    String
  thana       String
  ward        String?
  area        String?
  road        String?
  client_id   String?
  client_role String?
  like        String[]
  view        String[]
  status      Status   @default(ACTIVE)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("paid_video")
}

enum Status {
  ACTIVE
  EDIT
  BLOCKED
}

enum AdminRole {
  ADMIN
  SUB_ADMIN
  SUPPER_ADMIN
  ACCOUNT
  EDITOR
}

// npx prisma migrate dev --name init
// prisma studio
